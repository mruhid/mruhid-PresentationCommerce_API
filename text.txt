async function addWhyUsFeatures() {
  try {
    const newData = await prisma.whyUsFeatures.createMany({
      data: [
        {
            "title": "superrr",
            "description": "men superem",
            "image": "https://yusif.az/main/wp-content/uploads/2019/01/%D0%91%D0%B5%D0%B7-%D0%BD%D0%B0%D0%B7%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-2.png"
        },
        {
            "title": "Keyfiyyetli dizayn",
            "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
            "image": "https://yusif.az/main/wp-content/uploads/2019/01/%D0%91%D0%B5%D0%B7-%D0%BD%D0%B0%D0%B7%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-2.png"
        },
        {
            "title": " dizayn",
            "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
            "image": "https://yusif.az/main/wp-content/uploads/2019/01/%D0%91%D0%B5%D0%B7-%D0%BD%D0%B0%D0%B7%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-2.png"
        }
    ],
    skipDuplicates: true
        
      
    });

    console.log(" Social Links added successfully.");
  } catch (error) {
    console.error('Error adding Social Links:', error);
  } finally {
    await prisma.$disconnect();
  }
}


async function addWhyUs() {
  try {
    const newData = await prisma.whyUsSection.create({
      data: {
        title: "Bizim təqdimatlarımız sizə nə vədd edir?",
        action:true
      }
    // skipDuplicates: true
        
      
    });

    console.log(" Social Links added successfully.");
  } catch (error) {
    console.error('Error adding Social Links:', error);
  } finally {
    await prisma.$disconnect();
  }
}

async function addOperations() {
  try {
    const newData = await prisma.operations.createMany({
      data: [
        {
            "title": "Haqqımızda",
            "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deserunt neque mollitia fuga blanditiis? Voluptas, quasi modi!",
            "iconClass": "fas fa-book",
            "link": "./about.html",
            "place": 2,
            action:true
        },
        {
            "title": "Işlərimiz",
            "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deserunt neque mollitia fuga blanditiis? Voluptas, quasi modi!",
            "iconClass": "fas fa-project-diagram",
            "link": "./profile.html",
            "place": 1,
            action:true
        },
        {
            "title": "Sifariş ver",
            "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deserunt neque mollitia fuga blanditiis? Voluptas, quasi modi!",
            "iconClass": "fas fa-money-bill-wave",
            "link": "./price.html",
            "place": 3,
            action:true,
        },
        {
            "title": "Əlaqə Vasitələri",
            "description": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deserunt neque mollitia fuga blanditiis? Voluptas, quasi modi!",
            "iconClass": "fas fa-envelope",
            "link": "./contact.html",
            "place": 4,
            action:true
        }
    ],
    skipDuplicates: true
        
      
    });

    console.log(" Social Links added successfully.");
  } catch (error) {
    console.error('Error adding Social Links:', error);
  } finally {
    await prisma.$disconnect();
  }
}


async function addOperationSection() {
  try {
    const newData = await prisma.operationSection.create({
      data: 
        {
            title: "Əmliyyatlar",
            description: "description",
            action:true,
        },
      
    });

    console.log(" Social Links added successfully.");
  } catch (error) {
    console.error('Error adding Social Links:', error);
  } finally {
    await prisma.$disconnect();
  }
}


async function addHeroSectionMedia() {
  try {
    // Fetch the WhatsApp and Telegram social media information
    const whatsapp = await prisma.socialLinks.findFirst({
      where: { platform: 'WhatsApp' },
    });

    const telegram = await prisma.socialLinks.findFirst({
      where: { platform: 'Telegram' },
    });

    if (!whatsapp || !telegram) {
      throw new Error("WhatsApp or Telegram social links not found in the database.");
    }

    // Insert data into HeroSectionMedia with related SocialLinks information
    const newHeroSectionMedia = await prisma.heroSectionMedia.createMany({
      data: [
        {
          text: "sifaris ver", // Button text
          socialMediaId: whatsapp.id, // Link to WhatsApp
        },
        {
          text: "sifaris ver", // Button text
          socialMediaId: telegram.id, // Link to Telegram
        },
      ],
    });

    // Now, fetch the full HeroSectionMedia with related social media details
    const heroSectionMediaWithDetails = await prisma.heroSectionMedia.findMany({
      include: {
        socialMedia: true, // Include the related SocialLinks information
      },
    });

    // Log the full HeroSectionMedia entries with social media details
    console.log("HeroSectionMedia with details:", heroSectionMediaWithDetails);

  } catch (error) {
    console.error("Error adding Hero Section Media:", error);
  } finally {
    await prisma.$disconnect();
  }
}

async function addHeroSection() {
  try {
    const newHeroSection = await prisma.heroSection.create({
      data: {
        subtitle: "Teqdimat Sayti",
        backgroundImg: "../img/heroBg.jpg",
        title: "Biz supper<br>ve munasib tedimat hazirlayiriq",
        description: "Dream great dreams, make them a reality with us. Suspendisse varius odio sit amet mattis.",
        buttonText: "Learn More", // Example: You can adjust this field as required.
        buttonSrc: "/prise.html", // Example: Adjust the URL accordingly.
        action: true, // Adjust this based on your requirements.
      },
    });

    console.log("Hero Section added successfully:", newHeroSection);
  } catch (error) {
    console.error("Error adding Hero Section:", error);
  } finally {
    await prisma.$disconnect();
  }
}

async function addMultipleSocialLinks() {
  try {
    const newSocialLinks = await prisma.socialLinks.createMany({
      data:[
        { platform: 'Facebook', iconClass: 'fab fa-facebook', link: 'https://facebook.com' },
        { platform: 'Twitter', iconClass: 'fab fa-twitter', link: 'https://twitter.com' },
        { platform: 'Instagram', iconClass: 'fab fa-instagram', link: 'https://instagram.com' },
        { platform: 'LinkedIn', iconClass: 'fab fa-linkedin', link: 'https://linkedin.com' },
        { platform: 'YouTube', iconClass: 'fab fa-youtube', link: 'https://youtube.com' },
        { platform: 'TikTok', iconClass: 'fab fa-tiktok', link: 'https://tiktok.com' },
        { platform: 'WhatsApp', iconClass: 'fab fa-whatsapp', link: 'https://whatsapp.com' },
        { platform: 'Telegram', iconClass: 'fab fa-telegram', link: 'https://telegram.org' },
        { platform: 'Discord', iconClass: 'fab fa-discord', link: 'https://discord.com' },
        { platform: 'Phone', iconClass: 'fab fa-phone', link: 'tel:123456789' },
      ],
      
      skipDuplicates: true, // Optional: Avoid duplicate entries
    });

    console.log(`${newSocialLinks.count} Social Links added successfully.`);
  } catch (error) {
    console.error("Error adding Social Links:", error.message); // More specific error message
  } finally {
    await prisma.$disconnect();
  }
}

async function addCompanyData() {
  try {
    const newSocialLinks = await prisma.companyDetails.create({
      data:{
        companyLogo:'https://cdn-icons-png.flaticon.com/512/731/731972.png',
        companyName:'VusalCompany',
        companyWebLogo:'https://cdn-icons-png.flaticon.com/512/731/731972.png',
      }
      
    });

    console.log(` Social Links added successfully.`);
  } catch (error) {
    console.error("Error adding Social Links:", error.message); // More specific error message
  } finally {
    await prisma.$disconnect();
  }
}

async function addSocialSection() {
  try {
    const newSocialLinks = await prisma.socialSection.create({
      data:{
        title:'Follow us',
        action:true,
      }
      
    });

    console.log(` Social Links added successfully.`);
  } catch (error) {
    console.error("Error adding Social Links:", error.message); // More specific error message
  } finally {
    await prisma.$disconnect();
  }
}

async function addSocialSectionMedias() {
    try {
      // Step 1: Get the social media platforms
      const medias = await prisma.socialLinks.findMany({
        where: {
          platform: {
            in: ["Instagram", "Facebook", "LinkedIn", "Twitter"] // Adjust platform names as needed
          }
        }
      });
  
      // Step 2: Map the social media data to the format needed for SocialSectionMedia
      const sectionMediaData = medias.map(media => ({
        socialMediaId: media.id // Use the social media ID
      }));
  
      // Step 3: Add SocialSectionMedia entries using createMany
      const newSocialSectionMedias = await prisma.socialSectionMedia.createMany({
        data: sectionMediaData
      });
  
      console.log(`${newSocialSectionMedias.count} Social Section Medias added successfully.`);
    } catch (error) {
      console.error("Error adding Social Section Media:", error.message); // More specific error message
    } finally {
      await prisma.$disconnect();
    }
  }

  async function addFooterSide() {
    try {
      const addFooter= await prisma.footerSide.create({
          data:{
            heading:'Vusal Company',
            logoImg:'https://cdn-icons-png.flaticon.com/512/731/731972.png',
            copyright:'&#169;Ruhid.Ml All Right Reserved:2024',

          }
      })
  
      console.log(` Social Section Media records deleted successfully.`);
    } catch (error) {
      console.error("Error deleting Social Section Media:", error.message);
    } finally {
      await prisma.$disconnect();
    }
  }

  async function addFooterSocialMedia() {
    try {
      // Fetch the social media entries you want to link in the footer
      const medias = await prisma.socialLinks.findMany({
        where: {
          platform: {
            in: ["Instagram", "Facebook", "LinkedIn", "whatsapp"], // Adjust platform names as needed
          }
        }
      });
  
      // Map the data to the required format for footer social media
      const newData = medias.map(media => ({
        socialMediaId: media.id,
      }));
  
      // Add new entries to the FooterSocialMedia table
      const addedFooterSocialMedia = await prisma.footerSocialMedia.createMany({
        data: newData,
      });
  
      console.log(`${addedFooterSocialMedia.count} Social Media records added to Footer successfully.`);
    } catch (error) {
      console.error("Error adding Social Media to Footer:", error.message);
    } finally {
      await prisma.$disconnect();
    }
  }